# Generated by Django 4.2 on 2023-05-22 04:05

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('player', '0002_player_pitching_record_player_batting_record'),
        ('team', '0002_delete_team_group_stats'),
        ('referee', '0002_alter_referee_unique_together_referee_referee_and_more'),
        ('tournament', '0001_initial'),
        ('game', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='At_Bat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logs', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Inning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inning_number', models.IntegerField(default=0)),
                ('top', models.BooleanField(default=True)),
                ('runs', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Player_Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(choices=[('P', 'Pitcher'), ('C', 'Catcher'), ('1B', 'First Baseman'), ('2B', 'Second Baseman'), ('3B', 'Third Baseman'), ('SS', 'Shortstop'), ('LF', 'Left Fielder'), ('CF', 'Center Fielder'), ('RF', 'Right Fielder'), ('DH', 'Designated Hitter')], max_length=3)),
                ('order', models.IntegerField(default=0)),
                ('subbed_out', models.BooleanField(default=False)),
                ('plate_appearances', models.IntegerField(default=0)),
                ('at_bats', models.IntegerField(default=0)),
                ('runs', models.IntegerField(default=0)),
                ('hits', models.IntegerField(default=0)),
                ('RBIs', models.IntegerField(default=0)),
                ('home_runs', models.IntegerField(default=0)),
                ('strikeouts', models.IntegerField(default=0)),
                ('walks', models.IntegerField(default=0)),
                ('innings_pitched', models.FloatField(default=0)),
                ('hits_allowed', models.IntegerField(default=0)),
                ('runs_allowed', models.IntegerField(default=0)),
                ('earned_runs', models.IntegerField(default=0)),
                ('walks_allowed', models.IntegerField(default=0)),
                ('strikeouts_thrown', models.IntegerField(default=0)),
                ('home_runs_allowed', models.IntegerField(default=0)),
                ('batters_faced', models.IntegerField(default=0)),
                ('pitches_thrown', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Records',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topInnings', models.IntegerField(default=0)),
                ('bottomInnings', models.IntegerField(default=0)),
                ('topRuns', models.IntegerField(default=0)),
                ('bottomRuns', models.IntegerField(default=0)),
                ('topHits', models.IntegerField(default=0)),
                ('bottomHits', models.IntegerField(default=0)),
                ('topErrors', models.IntegerField(default=0)),
                ('bottomErrors', models.IntegerField(default=0)),
                ('topBBs', models.IntegerField(default=0)),
                ('bottomBBs', models.IntegerField(default=0)),
                ('topIP', models.FloatField(default=0)),
                ('bottomIP', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Simple_Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('top_runs', models.TextField(default='0,0,0,0,0,0,0')),
                ('bottom_runs', models.TextField(default='0,0,0,0,0,0,0')),
                ('top_hits_per_batter', models.TextField(default='')),
                ('bottom_hits_per_batter', models.TextField(default='')),
                ('top_strikeouts_per_pitcher', models.TextField(default='')),
                ('bottom_strikeouts_per_pitcher', models.TextField(default='')),
            ],
        ),
        migrations.RemoveField(
            model_name='game',
            name='gameDate',
        ),
        migrations.RemoveField(
            model_name='game',
            name='gameStartTime',
        ),
        migrations.AddField(
            model_name='game',
            name='first_base',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='first_base', to='referee.referee'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='game',
            name='forfeit',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='game',
            name='gameDateTime',
            field=models.DateTimeField(default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='game',
            name='groupGame',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='game',
            name='main',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.DO_NOTHING, related_name='main', to='referee.referee'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='game',
            name='record_keeper',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='record_keeper', to='referee.referee'),
        ),
        migrations.AddField(
            model_name='game',
            name='team1_home',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='game',
            name='third_base',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='third_base', to='referee.referee'),
        ),
        migrations.AlterField(
            model_name='game',
            name='team1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='team1', to='team.team_record'),
        ),
        migrations.AlterField(
            model_name='game',
            name='team2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='team2', to='team.team_record'),
        ),
        migrations.AlterField(
            model_name='game',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_game', to='tournament.tournament'),
        ),
        migrations.DeleteModel(
            name='GroupGame',
        ),
        migrations.AddField(
            model_name='simple_record',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game'),
        ),
        migrations.AddField(
            model_name='records',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_records', to='game.game'),
        ),
        migrations.AddField(
            model_name='records',
            name='losingPitcher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='losingPitcher', to='game.player_game'),
        ),
        migrations.AddField(
            model_name='records',
            name='savePitcher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='savePitcher', to='game.player_game'),
        ),
        migrations.AddField(
            model_name='records',
            name='winningPitcher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='winningPitcher', to='game.player_game'),
        ),
        migrations.AddField(
            model_name='player_game',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_playerGame', to='game.game'),
        ),
        migrations.AddField(
            model_name='player_game',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_playerGame', to='player.player_tournament'),
        ),
        migrations.AddField(
            model_name='order',
            name='batter1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='batter1', to='game.player_game'),
        ),
        migrations.AddField(
            model_name='order',
            name='batter2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='batter2', to='game.player_game'),
        ),
        migrations.AddField(
            model_name='order',
            name='batter3',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='batter3', to='game.player_game'),
        ),
        migrations.AddField(
            model_name='order',
            name='batter4',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='batter4', to='game.player_game'),
        ),
        migrations.AddField(
            model_name='order',
            name='batter5',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='batter5', to='game.player_game'),
        ),
        migrations.AddField(
            model_name='order',
            name='batter6',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='batter6', to='game.player_game'),
        ),
        migrations.AddField(
            model_name='order',
            name='batter7',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='batter7', to='game.player_game'),
        ),
        migrations.AddField(
            model_name='order',
            name='batter8',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='batter8', to='game.player_game'),
        ),
        migrations.AddField(
            model_name='order',
            name='batter9',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='batter9', to='game.player_game'),
        ),
        migrations.AddField(
            model_name='order',
            name='bench',
            field=models.ManyToManyField(related_name='bench', to='game.player_game'),
        ),
        migrations.AddField(
            model_name='order',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game'),
        ),
        migrations.AddField(
            model_name='order',
            name='startingPitcher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='startingPitcher', to='game.player_game'),
        ),
        migrations.AddField(
            model_name='inning',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_inning', to='game.game'),
        ),
        migrations.AddField(
            model_name='at_bat',
            name='inning',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inning_at_bat', to='game.inning'),
        ),
    ]
